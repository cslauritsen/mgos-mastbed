# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # Use existing repo tags to compute the next semver
      # dry_run: true => do not tag with the next semver value yet
      - id: next_version
        uses: zwaldowski/semver-release-action@v2
        with:
          prefix: v
          dry_run: true
          bump: patch
          github_token: ${{secrets.GITHUB_TOKEN}}

      - id: git_commit
        name: Update Files and Commit
        run: |
          find . -name mos.yml | xargs sed -i 's/^version: .*/version: ${{ steps.next_version.outputs.version}}/' 
          git commit -am "Set version ${{ steps.next_version.outputs.version}}" || echo Skipping commit
          git push
          echo ::set-output name=sha::$(git rev-parse HEAD)


      - name: mgos build
        uses: yaourdt/mongoose-os-action@v2.0.2
        with:
          mos-yml-path: .
          platform: esp8266
          build-args: --build-var MODEL=LoLin-NodeMCU

      - name: Tag Version
        uses: zwaldowski/semver-release-action@v2
        with:
          prefix: v
          github_token: ${{secrets.GITHUB_TOKEN}}
          sha: ${{ steps.git_commit.outputs.sha }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: fw-nodemcu-v${{ steps.next_version.outputs.version}}
          path: ./build/fw.zip

#     - name: Upload Artifact
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./build/fw.zip
#         asset_name: fw-nodemcu-v${{ steps.next_version.outputs.version}}.zip
#         asset_content_type: application/zip